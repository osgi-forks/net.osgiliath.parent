<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="Osgiliath integration tests for messaging"><sessioninfo id="osgiliath.net-f5679ac9" start="1417558203610" dump="1417558238521"/><sessioninfo id="osgiliath.net-86f2f237" start="1417558244840" dump="1417558278960"/><sessioninfo id="osgiliath.net-5871004c" start="1417558284537" dump="1417558319578"/><sessioninfo id="osgiliath.net-bcda8c71" start="1417558325968" dump="1417558369322"/><sessioninfo id="osgiliath.net-1eba595e" start="1417558375115" dump="1417558410483"/><sessioninfo id="osgiliath.net-6bf645a7" start="1417558415981" dump="1417558457062"/><package name="net/osgiliath/messaging"><class name="net/osgiliath/messaging/HelloEntity$HelloEntityBuilder"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entityId" desc="(Ljava/lang/Long;)Lnet/osgiliath/messaging/HelloEntity$HelloEntityBuilder;" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="helloMessage" desc="(Ljava/lang/String;)Lnet/osgiliath/messaging/HelloEntity$HelloEntityBuilder;" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lnet/osgiliath/messaging/HelloEntity;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/osgiliath/messaging/HelloEntity"><method name="builder" desc="()Lnet/osgiliath/messaging/HelloEntity$HelloEntityBuilder;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntityId" desc="()Ljava/lang/Long;" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHelloMessage" desc="()Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEntityId" desc="(Ljava/lang/Long;)V" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setHelloMessage" desc="(Ljava/lang/String;)V" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="34"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="34"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Long;Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="126" covered="13"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="20" covered="2"/><counter type="METHOD" missed="9" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/osgiliath/messaging/Hellos"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntities" desc="()Ljava/util/Collection;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEntities" desc="(Ljava/util/Collection;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="32"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canEqual" desc="(Ljava/lang/Object;)Z" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="32"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="73" covered="10"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="11" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HelloEntity.java"><line nr="34" mi="109" ci="0" mb="22" cb="0"/><line nr="35" mi="22" ci="8" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="50" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="148" covered="29"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="22" covered="5"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Hellos.java"><line nr="32" mi="73" ci="3" mb="14" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="10"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="11" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="221" covered="39"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="33" covered="8"/><counter type="METHOD" missed="15" covered="8"/><counter type="CLASS" missed="0" covered="3"/></package><package name="net/osgiliath/messaging/repository/impl"><class name="net/osgiliath/messaging/repository/impl/HelloJMSRepository"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findByHelloObjectMessage" desc="(Ljava/lang/String;)Ljava/util/Collection;" line="67"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="save" desc="(Lnet/osgiliath/messaging/HelloEntity;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAll" desc="()Lnet/osgiliath/messaging/Hellos;" line="95"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteAll" desc="()V" line="102"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onMessage" desc="(Ljavax/jms/Message;)V" line="107"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProducer" desc="(Lorg/springframework/jms/core/JmsOperations;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="59"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="18"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/osgiliath/messaging/repository/impl/HelloJMSRepository$1"><method name="&lt;init&gt;" desc="(Lnet/osgiliath/messaging/repository/impl/HelloJMSRepository;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMessage" desc="(Ljavax/jms/Session;)Ljavax/jms/Message;" line="86"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HelloJMSRepository.java"><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="11" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="2" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="14" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="74"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="20"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="32" covered="74"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="20"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="253" covered="113"/><counter type="BRANCH" missed="40" covered="0"/><counter type="LINE" missed="12" covered="24"/><counter type="COMPLEXITY" missed="36" covered="17"/><counter type="METHOD" missed="16" covered="17"/><counter type="CLASS" missed="0" covered="5"/></report>